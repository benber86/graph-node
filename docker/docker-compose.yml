version: '3'
services:
  nginx:
    image: nginx:1.21.0-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - graph-node
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/cert:/etc/letsencrypt:ro
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: ${DB_USER:-graph-node}
      postgres_pass: ${DB_PASSWORD:-let-me-in}
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: ${ETHEREUM_RPC}
      GRAPH_LOG: info
      GRAPH_ALLOW_NON_DETERMINISTIC_IPFS: 1
  ipfs:
    image: ipfs/go-ipfs:v0.10.0
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements"
      ]
    environment:
      POSTGRES_USER: ${DB_USER:-graph-node}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-let-me-in}
      POSTGRES_DB: graph-node
      PGDATA: "/mnt/HC_Volume_23099861/data/postgres"
    volumes:
      - /mnt/HC_Volume_23099861/data/postgres:/var/lib/postgresql/data
